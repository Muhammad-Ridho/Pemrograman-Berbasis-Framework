{"ast":null,"code":"import { domainPath } from \"./Config\";\n\nconst PostAPI = (path, data) => {\n  const promise = new Promise((resolve, reject) => {\n    fetch(`${domainPath}/${path}`, {\n      method: \"POST\",\n      // method POST untuk input atau insert data\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(data) // kirimkan ke body request untuk data artikel yang akan ditambahkan (insert)\n\n    }).then(result => {\n      resolve(result); // jika sukses menerima response dari server maka resolve response ke user\n    }, err => {\n      // jika terjadi error dari server (server down, dll),\n      reject(err); // maka kirim pesan error ke user melalui reject\n    });\n  });\n  return promise;\n};\n\n_c = PostAPI;\nexport default PostAPI;\n\nvar _c;\n\n$RefreshReg$(_c, \"PostAPI\");","map":{"version":3,"names":["domainPath","PostAPI","path","data","promise","Promise","resolve","reject","fetch","method","headers","Accept","body","JSON","stringify","then","result","err"],"sources":["F:/polinema/semester 6/PBF (Pemrograman Berbasis Framework)/Pemrograman-Berbasis-Framework/Praktikum-pertemuan12/firebase-crud/src/services-mhs/Post.js"],"sourcesContent":["import { domainPath } from \"./Config\";\n\nconst PostAPI = (path, data) => {\n  const promise = new Promise((resolve, reject) => {\n    fetch(`${domainPath}/${path}`, {\n      method: \"POST\", // method POST untuk input atau insert data\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(data), // kirimkan ke body request untuk data artikel yang akan ditambahkan (insert)\n    }).then(\n      (result) => {\n        resolve(result); // jika sukses menerima response dari server maka resolve response ke user\n      },\n      (err) => {\n        // jika terjadi error dari server (server down, dll),\n        reject(err); // maka kirim pesan error ke user melalui reject\n      }\n    );\n  });\n  return promise;\n};\n\nexport default PostAPI;\n"],"mappings":"AAAA,SAASA,UAAT,QAA2B,UAA3B;;AAEA,MAAMC,OAAO,GAAG,CAACC,IAAD,EAAOC,IAAP,KAAgB;EAC9B,MAAMC,OAAO,GAAG,IAAIC,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;IAC/CC,KAAK,CAAE,GAAER,UAAW,IAAGE,IAAK,EAAvB,EAA0B;MAC7BO,MAAM,EAAE,MADqB;MACb;MAChBC,OAAO,EAAE;QACPC,MAAM,EAAE,kBADD;QAEP,gBAAgB;MAFT,CAFoB;MAM7BC,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeX,IAAf,CANuB,CAMD;;IANC,CAA1B,CAAL,CAOGY,IAPH,CAQGC,MAAD,IAAY;MACVV,OAAO,CAACU,MAAD,CAAP,CADU,CACO;IAClB,CAVH,EAWGC,GAAD,IAAS;MACP;MACAV,MAAM,CAACU,GAAD,CAAN,CAFO,CAEM;IACd,CAdH;EAgBD,CAjBe,CAAhB;EAkBA,OAAOb,OAAP;AACD,CApBD;;KAAMH,O;AAsBN,eAAeA,OAAf"},"metadata":{},"sourceType":"module"}